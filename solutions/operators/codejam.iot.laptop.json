{
	"component": "com.sap.system.python3Operator",
	"description": "Laptop as IoT",
	"inports": [],
	"outports": [
		{
			"name": "payload",
			"type": "string"
		}
	],
	"tags": {},
	"subenginestags": {
		"com.sap.python36": {
			"python36": "",
			"python_psutil": ""
		}
	},
	"config": {
		"intervalMs": 2000,
		"script": "# import requests # http://docs.python-requests.org/en/master/\nimport psutil   # https://pypi.python.org/pypi/psutil\nimport time\nimport uuid\nimport json\n# import sys, platform # if need to read system params, like OS type\n\ndef readCPU():\n    return psutil.cpu_percent(percpu=False, interval=1)\n\t\ndef readMEM():\n    return psutil.virtual_memory().percent\n\ndef readPayload():\n\n\td_pctCPU = readCPU()\n\td_pctMEM = readMEM()\n\td_tstamp = int(round(time.time()))\n\tapi.logger.debug(\"\\nValues to post: {} {}\".format(d_pctCPU, d_tstamp))\n\n\tpayload = { 'guid' : deviceUIID, 'timestmp' : d_tstamp, 'cpu_load' : d_pctCPU, 'mem_load' : d_pctMEM }\n\t# api.logger.debug(\"\\nPayload: \", str(payload))\n\n\treturn json.dumps(payload)\n\ndef do_tick():\n    api.send(\"payload\", readPayload())\n\n\nglobal deviceUIID \ndeviceUIID = str(uuid.uuid1())\n\nintervalMs = int(api.config.intervalMs)\nif intervalMs < 1001:\n    intervalMs = 1001\n    \napi.add_timer(str(intervalMs-1000)+\"ms\", do_tick)"
	},
	"icon": "laptop"
}